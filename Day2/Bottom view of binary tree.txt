#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int> res;
    if(root==NULL) return res;
    map<int,int> m;
    queue<pair<BinaryTreeNode<int> *,int>> q;
    q.push({root,0});
    while(!q.empty()){
        pair<BinaryTreeNode<int> *,int> el = q.front();
        q.pop();
        // el.first->data,
        m[el.second]=el.first->data;
        if(el.first->left) q.push({el.first->left,el.second-1});
        if(el.first->right) q.push({el.first->right,el.second+1});
    }
    for(auto it: m){
        res.push_back(it.second);
    }
    return res;

    
}
